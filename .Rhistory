con <-url("https://google.com","r")
con <-url("http://google.com","r")
x <- readLines(con)
head(x)
?url
q()
demo()
x <- 1000
myfunction()
x <- rnorm(100)
x <- rnorm(100)
x <- rnorm(100)
myfunction <- function() {
}
dir()
save.image("C:\\Users\\Teh\\Desktop\\Local\\course\\Cousera Data Science\\4_Exploratory_Data_Analysis\\source\\.RData")
q()
library(datasets)
library(lattice)
airquality <- transform(airquality, Month= factor(Month))
head(airquality)
x <- xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
print(x)
class(x)
library(nlme)
?nlme
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
BodyWeight
s e t . s e e d ( 1 0 )
x   < -   r n o r m ( 1 0 0 )
f   < -   r e p ( 0 : 1 ,   e a c h   =   5 0 )
y   < -   x   +   f   -   f   *   x   +   r n o r m ( 1 0 0 ,   s d   =   0 . 5 )
f   < -   f a c t o r ( f ,   l a b e l s   =   c ( " G r o u p   1 " ,   " G r o u p   2 " ) )
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
head(f)
f
y <- x + f - f * x + rnorm(100, sd = 0.5)
z <- rnorm(100, sd = 0.5)
head(z)
length(y)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.points(1,2)})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.lpoints(1,2)})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.lines(1,2)})
panel.text("asdf")})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.text("asdf")})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x,y, ...)
panel.text(c("abc","def"))
})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x,y, ...)
text("asdf")
})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x,y,...)
panel.text(1,2,labels=c("asdf","ddd"))
})
?data
head(airquality)
data(airquality)
print
print.trellis()
print.trellis()
trellis
par()
head(airquality)
airquality$Month
class(airquality$Month)
?transform
z <- transform(airquality, Month = factor(Month))
head(z)
head(z$Month)
qplot(Wind, Ozone, data = z, facets = . ~ Month)
library(ggplot2)
qplot(Wind, Ozone, data = z, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "linear")
airquality
head(airquality)
type(airquality#
)
type(airquality$Ozone)
class(airquality$Ozone)
yy <- transform(airquality, Ozone = as.character(Ozone))
head(yy)
class(yy$Ozone)
yy$Ozone
?datasets
 library(help = "datasets")
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
dir()
library(jsonlite)
install.packages(jsonlite)
install.packages("jsonlite")
library(jsonlite)
conn <- file("students.txt")
jsonData <- fromJSON(conn)
jsonData <- fromJSON(conn.readLines())
conn.readLines()
readLines(conn)
?fromJSON
jsonData <- fromJSON(readLines(conn))
jsonData
set(jsonData)
unique(jsonData)
?foreach
for (str in jsonData){
print(str)}
jsonData <- fromJSON(readLines(conn))
names <- NULL
title <- NULL
for (str in jsonData){
}
strsplit(jsonData[1], ";")
unlist(strsplit(jsonData[1], ";"))
s <- unlist(strsplit(jsonData[1], ";"))
s[1]
s[2]
for (str in jsonData){
s <- unlist(strsplit(jsonData[1], ";"))
names <- c(names, s[1])
title <- c(title, s[2])
}
names
for (str in jsonData){
s <- unlist(strsplit(str, ";"))
names <- c(names, s[1])
title <- c(title, s[2])
}
names
title
z <- unique(names)
z
z
names.find("a")
"Wang, Yan" in names
"Wang, Yan" /%in%/ names
"Wang, Yan" %in% names
names <- NULL
title <- NULL
for (str in jsonData){
s <- unlist(strsplit(str, ";"))
if (!s[1] %in% names){
names <- c(names, s[1])
title <- c(title, s[2])
}}
names
library(jsonlite)
title
names(title == 'Msc")
;
names[title == 'Msc']
names[title == 'MSc']
titles
title
title.length()
length(title)
source("extractStudent.R")
source("extractStudent.R")
extractStudent()
source("extractStudent.R")
extractStudent()
source("extractStudent.R")
extractStudent()
?readLine
q()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("../exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("../exdata-data-NEI_data/Source_Classification_Code.rds")
head(NEI)
barplot(NEI$Emissions, year)
barplot(NEI$Emissions, NEI$year)
barplot(1:10,1:10)
barplot(1:10,1:10, ylab="Emission (tons)", xlab="year")
barplot(1:5,1:5, ylab="Emission (tons)", xlab="year")
barplot(1:5,1:5, ylab="Emission (tons)", xlab="year", main="Total PM2.5 Emissions in the United States")
?tables
?table
barplot(table(1:5), ylab="Emission (tons)", xlab="year", main="Total PM2.5 Emissions in the United States")
head(mtcars)
barplot(table(mtcars$gear), ylab="Emission (tons)", xlab="year", main="Total PM2.5 Emissions in the United States")
head(mtcars$gear)
as.table(1:5,1:5)
emission <- 1:5
NEI$year[1]
class(NEI$year[1])
year <- c(2001,2002,2003,2004,2005)
as.table(emission, year)
as.table(year)
barplot(mtcars$gear, ylab="Emission (tons)", xlab="year", main="Total PM2.5 Emissions in the United States")
barplot(emission, ylab="Emission (tons)", xlab="year", main="Total PM2.5 Emissions in the United States")
barplot(emission, ylab="Emission (tons)", names.arg= year, xlab="year", main="Total PM2.5 Emissions in the United States")
?tapply
sum_pollution_by_year <- tapply(NEI$Emissions, NEI$year, sum)
head(sum_pollution_by_year)
sum_pollution_by_year
barplot(sum_pollution_by_year, ylab="Emission (tons)", names.arg= year, xlab="year", main="Total PM2.5 Emissions in the United States")
barplot(sum_pollution_by_year, ylab="Emission (tons)", names.arg= names(sum_pollution_by_year), xlab="year", main="Total PM2.5 Emissions in the United States")
barplot(sum_pollution_by_year/10^6, ylab="Emission (10^6 tons)", names.arg= names(sum_pollution_by_year), xlab="year", main="Total PM2.5 Emissions in the United States")
save.image("C:\\Users\\Teh\\Desktop\\Local\\course\\Cousera Data Science\\4_Exploratory_Data_Analysis\\source\\exploratory_data_analysis\\.RData")
